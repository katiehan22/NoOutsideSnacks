{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nooutsidesnacks/./src/scripts/topping.js","webpack://nooutsidesnacks/./src/scripts/moving_object.js","webpack://nooutsidesnacks/./src/scripts/food_item.js","webpack://nooutsidesnacks/./src/scripts/level.js","webpack://nooutsidesnacks/./src/index.js","webpack://nooutsidesnacks/./src/scripts/game.js"],"sourcesContent":["class Topping {\n  constructor(name, vel) {\n    this.name = name;\n    if (name === \"slushee-img\") {\n      this.color = \"#FE2F92\";\n      this.pos = [173, 350];\n    } else if (name === \"hotdog-img\") {\n      this.color = \"yellow\";\n      this.pos = [338, 350];\n    } else if (name === \"popcorn-img\") {\n      this.color = \"#F6B977\";\n      this.pos = [504, 350];\n    } else {  // salt\n      this.color = \"white\";\n      this.pos = [668, 350];\n    }\n    this.vel = vel; // 20 and 25\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.pos[0], this.pos[1], 15, 40);\n  }\n\n  move() {\n    this.pos = [this.pos[0], this.pos[1] + this.vel];\n  }\n\n  outOfBounds() {\n    if (this.pos[1] >= 475) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nexport default Topping","class MovingObject {\n  constructor(pos, vel, img) {\n    this.pos = pos;\n    this.vel = vel;\n    this.img = img;\n  }\n\n  draw(ctx) {  \n    ctx.drawImage(this.img, this.pos[0], this.pos[1], 75, 75);\n  }\n\n  move() {\n    this.pos = [this.pos[0] + this.vel, this.pos[1]];\n  }\n}\n\nexport default MovingObject","import MovingObject from \"./moving_object\"\n\nconst DIM_X = 800;\nconst DIM_Y = 600;\n\nconst FOODITEMS = { \n  slushee: \"assets/images/cupempty.png\",\n  hotdog: \"assets/images/hotdog.png\",\n  popcorn: \"assets/images/popcornplain.png\",\n  pretzel: \"assets/images/pretzelplain.png\",\n  slusheeCorrect: \"assets/images/cupfilled.png\",\n  hotdogCorrect: \"assets/images/hotdogmustard.png\",\n  popcornCorrect: \"assets/images/popcornbutter.png\",\n  pretzelCorrect: \"assets/images/pretzelsalt.png\", \n  slusheeIncorrect: \"assets/images/cupincorrect.png\",\n  hotdogIncorrect: \"assets/images/hotdogincorrect.png\",\n  popcornIncorrect: \"assets/images/popcornincorrect.png\",\n  pretzelIncorrect: \"assets/images/pretzelincorrect.png\"\n}\n\nclass FoodItem extends MovingObject {\n  constructor(pos, vel, name) {\n    const img = new Image();\n    img.src = FOODITEMS[name];\n    super(pos, vel, img);\n    this.name = name;\n    this.topping = null;\n  }\n\n  move() {\n    this.pos = [this.pos[0] + this.vel, this.pos[1]];\n  }\n\n  draw(ctx) {  \n    ctx.drawImage(this.img, this.pos[0], this.pos[1], 75, 75);\n  }\n\n  swapImage(status) {\n    if (status === \"correct\") {\n      // Change to correct img and set this.topping\n      if (this.name === \"slushee\") {\n        this.img.src = \"assets/images/cupfilled.png\";\n      } else if (this.name === \"hotdog\") {\n        this.img.src = \"assets/images/hotdogmustard.png\";\n      } else if (this.name === \"popcorn\") {\n        this.img.src = \"assets/images/popcornbutter.png\";\n      } else {\n        this.img.src = \"assets/images/pretzelsalt.png\";\n      }\n      this.topping = this.name;\n    } else {\n      // Change to incorrect img\n      if (this.name === \"slushee\") {\n        this.img.src = \"assets/images/cupincorrect.png\";\n      } else if (this.name === \"hotdog\") {\n        this.img.src = \"assets/images/hotdogincorrect.png\";\n      } else if (this.name === \"popcorn\") {\n        this.img.src = \"assets/images/popcornincorrect.png\";\n      } else {\n        this.img.src = \"assets/images/pretzelincorrect.png\";\n      }\n      this.topping = \"incorrect\";\n    }\n  }\n\n  static get FOODITEMS() {\n    return FOODITEMS;\n  }\n}\n\nexport default FoodItem","import FoodItem from \"./food_item\";\n\nconst DIM_X = 800;\nconst DIM_Y = 600;\n\nconst LEVELVARIABLES = {\n  1: [1, 15, 2000, 10, 10], \n  2: [2, 15, 2000, 16, 10],\n  3: [3, 20, 4000, 10, 15],\n  4: [4, 20, 4000, 14, 15] \n}\n// levelNum, totalFoodItems, intervalDuration, foodItemVel, correctItemsNeeded\n\nclass Level {\n  constructor(levelNum) {\n    this.levelNum = levelNum;\n    this.totalFoodItems = LEVELVARIABLES[this.levelNum][1]; // total food items\n    this.allFoodItems = [];\n    this.numItems = 0;\n    this.allToppings = [];\n    this.score = 0;\n    this.intervalId = undefined;\n    this.muted = false;\n    this.createFoodItem();  // call it once in the beginning so it starts without waiting for the interval \n    this.fillFoodItems();\n  }\n\n  fillFoodItems() {\n    this.intervalId = setInterval(this.createFoodItem.bind(this), LEVELVARIABLES[this.levelNum][2]);  // intervalDuration\n  }\n\n  createFoodItem() {\n    let keys = Object.keys(FoodItem.FOODITEMS);\n    let randPos = Math.floor(Math.random() * 4);\n    let colorValue = keys[randPos];\n    if(this.levelNum === 1 || this.levelNum === 2) {\n      let newFoodItem = new FoodItem([0, 450], LEVELVARIABLES[this.levelNum][3], colorValue); //velocity \n      this.allFoodItems.push(newFoodItem);\n      this.numItems += 1;\n    } else if (this.levelNum === 3 || this.levelNum === 4) {\n      let newFoodItem = new FoodItem([0, 450], LEVELVARIABLES[this.levelNum][3], colorValue); //velocity \n      this.allFoodItems.push(newFoodItem);\n\n      randPos = Math.floor(Math.random() * 4);\n      colorValue = keys[randPos];\n      let newFoodItem2 = new FoodItem([-90, 450], LEVELVARIABLES[this.levelNum][3], colorValue);\n      this.allFoodItems.push(newFoodItem2);\n\n      this.numItems += 2;\n    }\n\n    if (this.numItems === this.totalFoodItems) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  checkToppingBounds() {\n    if (this.allToppings.length > 0 && this.allToppings[0].outOfBounds()) {\n      this.allToppings = this.allToppings.slice(1);\n    }\n  }\n\n  getBelowFoodItem(newTopping) {\n    // Checks if there are any food items with an x-pos within the range of the clicked topping \n    let belowFoodItem = null;\n    for (let i = 0; i < this.allFoodItems.length; i++) {\n      let foodItem = this.allFoodItems[i];\n      if (foodItem.pos[0] >= (newTopping.pos[0] - 125) && foodItem.pos[0] <= (newTopping.pos[0] - 10)) {\n        belowFoodItem = foodItem;\n      }\n    }\n    if (belowFoodItem != null && belowFoodItem.topping === null) {\n      this.addTopping(belowFoodItem, newTopping);\n    }\n    return belowFoodItem;\n  }\n\n  addTopping(belowFoodItem, newTopping) {\n    if (this.checkCorrectMatch(belowFoodItem, newTopping) === true) {\n      belowFoodItem.swapImage(\"correct\");\n      this.score += 1;\n      if(this.muted === false) {\n        let correctSound1 = new Audio(\"assets/audio/correct.wav\");\n        correctSound1.play();\n      }\n    } else {\n      belowFoodItem.swapImage(\"incorrect\");\n      if(this.muted === false) {\n        let incorrectSound1 = new Audio(\"assets/audio/incorrect.mp3\");\n        incorrectSound1.play();\n      }\n    }\n  }\n\n  checkCorrectMatch(belowFoodItem, newTopping) {\n    if ((belowFoodItem.name === \"hotdog\" && newTopping.name === \"hotdog-img\") || (belowFoodItem.name === \"popcorn\" && newTopping.name === \"popcorn-img\") || (belowFoodItem.name === \"slushee\" && newTopping.name === \"slushee-img\") || (belowFoodItem.name === \"pretzel\" && newTopping.name === \"pretzel-img\")) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggleMute() {\n    if (this.muted === true) {\n      this.muted = false;\n    } else {\n      this.muted = true;\n    }\n  }\n\n  static get LEVELVARIABLES() {\n    return LEVELVARIABLES;\n  }\n}\n\nexport default Level","import Game from './scripts/game'\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"game-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const startButton = document.getElementById(\"start-button\");\n  const startButton2 = document.getElementById(\"start-button2\");\n  const titleScreen = document.querySelector(\".title-screen\");\n  const canvasDiv = document.querySelector(\".canvas-div\");\n  const gameCanvas = document.getElementById(\"game-canvas\");\n  const instructionsButton = document.getElementById(\"instructions-button\");\n  const instructionsScreen = document.querySelector(\".instructions-screen\");\n\n  const game = new Game(ctx, canvasDiv);\n\n  startButton.addEventListener(\"click\", function(){\n    titleScreen.style.display = \"none\";\n    canvasDiv.style.display = \"block\";\n    gameCanvas.style.display = \"block\";\n\n    game.start();\n  });\n\n  startButton2.addEventListener(\"click\", function () {\n    instructionsScreen.style.display = \"none\";\n    canvasDiv.style.display = \"block\";\n    gameCanvas.style.display = \"block\";\n\n    game.start();\n  });\n\n  instructionsButton.addEventListener(\"click\", function() {\n    titleScreen.style.display = \"none\";\n    instructionsScreen.style.display = \"block\";\n  });\n})","import Topping from \"./topping\";\nimport Level from \"./level\";\n\nconst DIM_X = 800;\nconst DIM_Y = 600;\n\nclass Game {\n  constructor(ctx, el){\n    this.ctx = ctx;\n    this.el = el; \n    this.background = new Image();\n    this.background.src = \"assets/images/concessions4.png\";\n    this.backgroundMusic = new Audio(\"assets/audio/ukulele.mp3\");\n    this.backgroundMusic.loop = true;\n    this.createMute();\n    this.createDispensers();\n    this.scoreImg = new Image();\n    this.scoreImg.src = \"assets/images/starscore.png\";\n    this.levelsScreen = document.querySelector(\".levels-screen\");\n    this.endScreen = document.querySelector(\".end-screen\");\n    this.levelNum = 1;\n    this.level; \n    if (this.levelNum === 1 || this.levelNum === 3) {\n      this.toppingVel = 20;\n    } else {\n      this.toppingVel = 25;\n    }\n    this.intervalIdToppingBounds = undefined;\n    this.intervalIdIsOver = undefined;\n    this.firstGame = true;\n    this.handleClick = this.handleClick.bind(this);\n    this.startNextLevel = this.startNextLevel.bind(this);\n    this.restartGame = this.restartGame.bind(this);\n    this.backToHome = this.backToHome.bind(this);\n    this.handleMute = this.handleMute.bind(this);\n    this.bindEvents();\n  }\n\n  start() {\n    if(this.firstGame) {\n      this.backgroundMusic.play();\n      this.level = new Level(this.levelNum); \n      this.step();\n    } else {\n      this.restartGame();\n    }\n  }\n\n  step() {\n    setInterval(this.draw.bind(this, this.ctx), 100);\n    setInterval(this.moveObjects.bind(this), 100);\n    this.intervalIdToppingBounds = setInterval(this.level.checkToppingBounds.bind(this.level), 100);\n    this.intervalIdIsOver = setInterval(this.isOver.bind(this), 100);\n  }\n\n  isOver() {\n    // if allFoodItems.length === totalFoodItems and the last foodItem's x pos is greater than DIM X\n    if (this.level.allFoodItems.length === Level.LEVELVARIABLES[this.level.levelNum][1] && this.level.allFoodItems[this.level.allFoodItems.length - 1].pos[0] >= DIM_X) {\n      this.levelResult();\n      clearInterval(this.intervalIdIsOver);\n    }\n  }\n\n  levelResult() {\n    // If level num 1-3, \n      // If win (score is greater/equal to correctItemsNeeded), show levels screen\n      // If lose, show end screen\n    // Else (level = 4, last), show end screen\n    if (this.levelNum <= 3) {\n      if (this.level.score >= Level.LEVELVARIABLES[this.level.levelNum][4]) {\n        this.showLevelsScreen();\n      } else {\n        this.showEndScreen();\n      }\n    } else {\n      this.showEndScreen();\n    }\n  }\n\n  showLevelsScreen() {\n    let levelSummary = document.querySelector(\".level-summary\");\n    let levelReq = document.querySelector(\".level-req\");\n    levelSummary.innerHTML = `You fulfilled ${this.level.score} out of ${Level.LEVELVARIABLES[this.level.levelNum][1]} items!`;\n    levelReq.innerHTML = `In Level ${this.levelNum + 1}, you need to fulfill ${Level.LEVELVARIABLES[this.levelNum + 1][4]} out of ${Level.LEVELVARIABLES[this.levelNum + 1][1]} items.`;\n    this.levelsScreen.style.display = \"block\";\n  }\n\n  showEndScreen() {\n    // If won, show you won. Else, show you lost.\n    let gameSummary = document.querySelector(\".game-summary\");\n    if (this.level.score >= Level.LEVELVARIABLES[this.level.levelNum][4]) {\n      gameSummary.innerHTML = 'You won!';\n    } else {\n      gameSummary.innerHTML = 'You lost!';\n    }\n    this.endScreen.style.display = \"block\";\n  }\n\n  createMute() {\n    const ul = document.createElement(\"ul\");\n    ul.classList.add(\"game-buttons\");\n    this.el.appendChild(ul);\n\n    let mute = document.createElement(\"li\");\n    mute.classList.add(\"mute\");\n    let imgMute = document.createElement(\"img\");\n    imgMute.src = \"assets/images/buttonmute.png\";\n    imgMute.id = \"mute-img\";\n    mute.appendChild(imgMute);\n\n    ul.appendChild(mute);\n  }\n\n  createDispensers() {\n    const ul = document.createElement(\"ul\");\n    ul.classList.add(\"dispenser-machines\");\n    this.el.appendChild(ul);\n\n    let dispenserSlushee = document.createElement(\"li\");\n    dispenserSlushee.classList.add(\"slushee\");\n    let imgSlushee = document.createElement(\"img\");\n    imgSlushee.src = \"assets/images/dispenserslushee.png\";\n    imgSlushee.id = \"slushee-img\";\n    dispenserSlushee.appendChild(imgSlushee);\n\n    let dispenserHotdog = document.createElement(\"li\");\n    dispenserHotdog.classList.add(\"hotdog\");\n    let imgHotdog = document.createElement(\"img\");\n    imgHotdog.src = \"assets/images/dispensermustard.png\";\n    imgHotdog.id = \"hotdog-img\";\n    dispenserHotdog.appendChild(imgHotdog);\n\n    let dispenserPopcorn = document.createElement(\"li\");\n    dispenserPopcorn.classList.add(\"popcorn\");\n    let imgPopcorn = document.createElement(\"img\");\n    imgPopcorn.src = \"assets/images/dispenserbutter2.png\";\n    imgPopcorn.id = \"popcorn-img\";\n    dispenserPopcorn.appendChild(imgPopcorn);\n\n    let dispenserPretzel = document.createElement(\"li\");\n    dispenserPretzel.classList.add(\"pretzel\");\n    let imgPretzel = document.createElement(\"img\");\n    imgPretzel.src = \"assets/images/dispensersalt2.png\";\n    imgPretzel.id = \"pretzel-img\";\n    dispenserPretzel.appendChild(imgPretzel);\n\n    ul.appendChild(dispenserSlushee);\n    ul.appendChild(dispenserHotdog);\n    ul.appendChild(dispenserPopcorn);\n    ul.appendChild(dispenserPretzel);\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, DIM_X, DIM_Y);\n    // draw background\n    ctx.drawImage(this.background, 0, 0);\n    // draw food items\n    for(let i = 0; i < this.level.allFoodItems.length; i++) {\n      this.level.allFoodItems[i].draw(ctx);\n    }\n    // draw toppings being dispensed \n    for (let j = 0; j < this.level.allToppings.length; j++) {\n      this.level.allToppings[j].draw(ctx);\n    }\n\n    // draw score\n    ctx.drawImage(this.scoreImg, 560, 0, 175, 175);\n    ctx.textAlign = \"center\";\n    ctx.lineWidth = 0.5;\n    ctx.fillStyle = \"black\";\n    ctx.font = \"15px Alkalami\";\n    ctx.fillText(\"Score\", 646, 80);\n    ctx.font = \"30px Alkalami\";\n    ctx.fillText(`${this.level.score}`, 647, 110);\n  }\n\n  moveObjects() {\n    for (let i = 0; i < this.level.allFoodItems.length; i++) {\n      this.level.allFoodItems[i].move();\n    }\n\n    for (let j = 0; j < this.level.allToppings.length; j++) {\n      this.level.allToppings[j].move();\n    }\n  }\n\n  bindEvents() {\n    let ul = document.querySelector(\".dispenser-machines\")\n    ul.addEventListener(\"click\", this.handleClick);\n\n    let muteButton = document.querySelector(\"#mute-img\");\n    muteButton.addEventListener(\"click\", this.handleMute);\n\n    let nextLevelButton = document.querySelector(\"#next-level-button\");\n    nextLevelButton.addEventListener(\"click\", this.startNextLevel);\n\n    let restartButton = document.querySelector(\"#restart-button\");\n    restartButton.addEventListener(\"click\", this.restartGame);\n\n    let backHomeButton = document.querySelector(\"#home-button\");\n    backHomeButton.addEventListener(\"click\", this.backToHome);\n  }\n\n  handleClick(e) {\n    let selectedImg = e.target;\n    if (selectedImg.nodeName === \"IMG\") {\n      let newTopping = new Topping(selectedImg.id, this.toppingVel);\n      this.level.allToppings.push(newTopping);\n      this.level.getBelowFoodItem(newTopping);\n    }\n  }\n\n  handleMute(e) {\n    let muteButton = document.querySelector(\"#mute-img\");\n    if (this.backgroundMusic.muted) {\n      this.backgroundMusic.muted = false;\n      muteButton.src = \"assets/images/buttonmute.png\";\n    } else {\n      this.backgroundMusic.muted = true;\n      muteButton.src = \"assets/images/buttonunmute.png\";\n    }\n    this.level.toggleMute();\n  }\n\n  startNextLevel(e) {\n    this.levelsScreen.style.display = \"none\";\n    this.levelNum += 1;\n    this.level = new Level(this.levelNum);\n    clearInterval(this.intervalIdToppingBounds);\n    this.intervalIdToppingBounds = setInterval(this.level.checkToppingBounds.bind(this.level), 100);\n    this.intervalIdIsOver = setInterval(this.isOver.bind(this), 100);\n  }\n\n  restartGame(e) {\n    this.endScreen.style.display = \"none\";\n    this.levelNum = 1;\n    this.level = new Level(this.levelNum);\n    clearInterval(this.intervalIdToppingBounds);\n    this.intervalIdToppingBounds = setInterval(this.level.checkToppingBounds.bind(this.level), 100);\n    this.intervalIdIsOver = setInterval(this.isOver.bind(this), 100);\n  }\n\n  backToHome(e) {\n    let titleScreen = document.querySelector(\".title-screen\");\n    let canvasDiv = document.querySelector(\".canvas-div\");\n    let gameCanvas = document.getElementById(\"game-canvas\");\n\n    this.endScreen.style.display = \"none\";\n    canvasDiv.style.display = \"none\";\n    gameCanvas.style.display = \"none\";\n    titleScreen.style.display = \"flex\";\n\n    this.firstGame = false;\n  }\n}\n\nexport default Game"],"names":["constructor","pos","vel","img","this","draw","ctx","drawImage","move","FOODITEMS","slushee","hotdog","popcorn","pretzel","slusheeCorrect","hotdogCorrect","popcornCorrect","pretzelCorrect","slusheeIncorrect","hotdogIncorrect","popcornIncorrect","pretzelIncorrect","MovingObject","name","Image","src","super","topping","swapImage","status","LEVELVARIABLES","levelNum","totalFoodItems","allFoodItems","numItems","allToppings","score","intervalId","undefined","muted","createFoodItem","fillFoodItems","setInterval","bind","keys","Object","FoodItem","randPos","Math","floor","random","colorValue","newFoodItem","push","newFoodItem2","clearInterval","checkToppingBounds","length","outOfBounds","slice","getBelowFoodItem","newTopping","belowFoodItem","i","foodItem","addTopping","checkCorrectMatch","Audio","play","toggleMute","document","addEventListener","getElementById","getContext","startButton","startButton2","titleScreen","querySelector","canvasDiv","gameCanvas","instructionsButton","instructionsScreen","game","el","background","backgroundMusic","loop","createMute","createDispensers","scoreImg","levelsScreen","endScreen","level","toppingVel","intervalIdToppingBounds","intervalIdIsOver","firstGame","handleClick","startNextLevel","restartGame","backToHome","handleMute","bindEvents","start","Level","step","moveObjects","isOver","levelResult","showLevelsScreen","showEndScreen","levelSummary","levelReq","innerHTML","style","display","gameSummary","ul","createElement","classList","add","appendChild","mute","imgMute","id","dispenserSlushee","imgSlushee","dispenserHotdog","imgHotdog","dispenserPopcorn","imgPopcorn","dispenserPretzel","imgPretzel","clearRect","j","textAlign","lineWidth","fillStyle","font","fillText","e","selectedImg","target","nodeName","color","fillRect","muteButton"],"sourceRoot":""}