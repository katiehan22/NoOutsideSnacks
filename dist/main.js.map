{"version":3,"file":"main.js","mappings":"qCAiBA,MAjBA,MACEA,YAAYC,EAAKC,EAAKC,GACpBC,KAAKH,IAAMA,EACXG,KAAKF,IAAMA,EACXE,KAAKD,IAAMA,CAEZ,CAEDE,KAAKC,GACHA,EAAIC,UAAUH,KAAKD,IAAKC,KAAKH,IAAI,GAAIG,KAAKH,IAAI,GAAI,GAAI,GACvD,CAEDO,OACEJ,KAAKH,IAAM,CAACG,KAAKH,IAAI,GAAKG,KAAKF,IAAKE,KAAKH,IAAI,GAC9C,GCZH,MAGMQ,EAAY,CAChBC,QAAS,6BACTC,OAAQ,2BACRC,QAAS,iCACTC,QAAS,iCACTC,eAAgB,8BAChBC,cAAe,kCACfC,eAAgB,kCAChBC,eAAgB,gCAChBC,iBAAkB,iCAClBC,gBAAiB,oCACjBC,iBAAkB,qCAClBC,iBAAkB,sCAqDpB,MAlDA,cAAuBC,EACrBtB,YAAYE,EAAKqB,GACf,MAAMpB,EAAM,IAAIqB,MAChBrB,EAAIsB,IAAMhB,EAAUc,GACpBG,MAAM,CAAC,EAAG,KAAMxB,EAAKC,GACrBC,KAAKmB,KAAOA,EACZnB,KAAKuB,QAAU,IAChB,CAEDnB,OACEJ,KAAKH,IAAM,CAACG,KAAKH,IAAI,GAAKG,KAAKF,IAAKE,KAAKH,IAAI,GAC9C,CAEDI,KAAKC,GACHA,EAAIC,UAAUH,KAAKD,IAAKC,KAAKH,IAAI,GAAIG,KAAKH,IAAI,GAAI,GAAI,GACvD,CAED2B,UAAUC,GACO,YAAXA,GAEgB,YAAdzB,KAAKmB,KACPnB,KAAKD,IAAIsB,IAAM,8BACQ,WAAdrB,KAAKmB,KACdnB,KAAKD,IAAIsB,IAAM,kCACQ,YAAdrB,KAAKmB,KACdnB,KAAKD,IAAIsB,IAAM,kCAEfrB,KAAKD,IAAIsB,IAAM,gCAEjBrB,KAAKuB,QAAUvB,KAAKmB,OAGF,YAAdnB,KAAKmB,KACPnB,KAAKD,IAAIsB,IAAM,iCACQ,WAAdrB,KAAKmB,KACdnB,KAAKD,IAAIsB,IAAM,oCACQ,YAAdrB,KAAKmB,KACdnB,KAAKD,IAAIsB,IAAM,qCAEfrB,KAAKD,IAAIsB,IAAM,qCAEjBrB,KAAKuB,QAAU,YAElB,CAEUlB,uBACT,OAAOA,CACR,GChEH,MAGMqB,EAAiB,CACrB,EAAG,CAAC,EAAG,EAAG,IAAM,GAAI,GACpB,EAAG,CAAC,EAAG,GAAI,IAAM,GAAI,KA6FvB,MAvFA,MACE9B,YAAY+B,GACV3B,KAAK2B,SAAWA,EAIhB3B,KAAK4B,eAAiBF,EAAe1B,KAAK2B,UAAU,GACpD3B,KAAK6B,aAAe,GACpB7B,KAAK8B,SAAW,EAChB9B,KAAK+B,gBAAaC,EAClBhC,KAAKiC,gBACLjC,KAAKkC,YAAc,GACnBlC,KAAKmC,MAAQ,EACbnC,KAAKoC,aAAe,IAAIC,MAAM,4BAC9BrC,KAAKsC,eAAiB,IAAID,MAAM,8BAChCrC,KAAKuC,gBAAkB,IAAIF,MAAM,4BACjCrC,KAAKuC,gBAAgBC,MACtB,CAEDP,gBACEjC,KAAK+B,WAAaU,YAAYzC,KAAK0C,eAAeC,KAAK3C,MAAO0B,EAAe1B,KAAK2B,UAAU,GAC7F,CAEDe,iBACE,IAEIE,EAFOC,OAAOC,KAAKC,EAAAA,WACTC,KAAKC,MAAsB,EAAhBD,KAAKE,WAE1BC,EAAc,IAAIJ,EAASrB,EAAe1B,KAAK2B,UAAU,GAAIiB,GACjE5C,KAAK6B,aAAauB,KAAKD,GACvBnD,KAAK8B,UAAY,EACb9B,KAAK8B,WAAa9B,KAAK4B,gBACzByB,cAAcrD,KAAK+B,WAEtB,CAEDuB,qBACMtD,KAAKkC,YAAYqB,OAAS,GAAKvD,KAAKkC,YAAY,GAAGsB,gBACrDxD,KAAKkC,YAAclC,KAAKkC,YAAYuB,MAAM,GAE7C,CAEDC,iBAAiBC,GAGf,IAAIC,EAAgB,KACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI7D,KAAK6B,aAAa0B,OAAQM,IAAK,CACjD,IAAIC,EAAW9D,KAAK6B,aAAagC,GAC7BC,EAASjE,IAAI,IAAO8D,EAAW9D,IAAI,GAAK,KAAQiE,EAASjE,IAAI,IAAO8D,EAAW9D,IAAI,GAAK,KAC1F+D,EAAgBE,EAChBC,QAAQC,IAAIF,GACZC,QAAQC,IAAIL,GAEf,CAID,OAHqB,MAAjBC,GAAmD,OAA1BA,EAAcrC,SACzCvB,KAAKiE,WAAWL,EAAeD,GAE1BC,CACR,CAEDK,WAAWL,EAAeD,IAKkC,IAAtD3D,KAAKkE,kBAAkBN,EAAeD,IACxCC,EAAcpC,UAAU,WACxBxB,KAAKoC,aAAaI,OAClBxC,KAAKmC,OAAS,IAEdyB,EAAcpC,UAAU,aACxBxB,KAAKsC,eAAeE,OAEvB,CAED0B,kBAAkBN,EAAeD,GAC/B,MAA4B,WAAvBC,EAAczC,MAAyC,eAApBwC,EAAWxC,MAAkD,YAAvByC,EAAczC,MAA0C,gBAApBwC,EAAWxC,MAAmD,YAAvByC,EAAczC,MAA0C,gBAApBwC,EAAWxC,MAAmD,YAAvByC,EAAczC,MAA0C,gBAApBwC,EAAWxC,IAKpR,CAEUO,4BACT,OAAOA,CACR,GC9FHyC,SAASC,iBAAiB,oBAAoB,KAC5C,MACMlE,EADSiE,SAASE,eAAe,eACpBC,WAAW,MAIxBC,GAFcJ,SAASE,eAAe,gBACxBF,SAASK,cAAc,iBACzBL,SAASK,cAAc,gBACtBL,SAASE,eAAe,eAE9B,ICNf,MACEzE,YAAYM,EAAKuE,GACfzE,KAAKE,IAAMA,EACXF,KAAKyE,GAAKA,EACVzE,KAAK0E,WAAa,IAAItD,MACtBpB,KAAK0E,WAAWrD,IAAM,iCACtBrB,KAAK2E,kBACL3E,KAAK4E,mBACL5E,KAAK6E,QAAS,EACd7E,KAAK8E,SAAW,IAAI1D,MACpBpB,KAAK8E,SAASzD,IAAM,8BACpBrB,KAAK+E,aAAeZ,SAASK,cAAc,kBAC3CxE,KAAK+E,aAAaC,MAAMC,QAAU,OAClCjF,KAAKkF,UAAYf,SAASK,cAAc,eACxCxE,KAAKkF,UAAUF,MAAMC,QAAU,OAC/BjF,KAAK2B,SAAW,EAChB3B,KAAKmF,MAAQ,IAAIC,EAAMpF,KAAK2B,UAC5B3B,KAAKqF,YAAcrF,KAAKqF,YAAY1C,KAAK3C,MACzCA,KAAKsF,YACN,CAEDC,QACEvF,KAAKwF,MACN,CAEDA,OACE/C,YAAYzC,KAAKC,KAAK0C,KAAK3C,KAAMA,KAAKE,KAAM,KAC5CuC,YAAYzC,KAAKyF,YAAY9C,KAAK3C,MAAO,KACzCyC,YAAYzC,KAAKmF,MAAM7B,mBAAmBX,KAAK3C,KAAKmF,OAAQ,KAC5D1C,YAAYzC,KAAK0F,OAAO/C,KAAK3C,MAAO,IACrC,CAED0F,SAEM1F,KAAKmF,MAAMtD,aAAa0B,SAAW6B,EAAAA,eAAqBpF,KAAKmF,MAAMxD,UAAU,IAAM3B,KAAKmF,MAAMtD,aAAa7B,KAAKmF,MAAMtD,aAAa0B,OAAS,GAAG1D,IAAI,IArC7I,KAsCRG,KAAK2F,aAER,CAEDA,cAIM3F,KAAKmF,MAAMhD,OAASiD,EAAAA,eAAqBpF,KAAKmF,MAAMxD,UAAU,GAChE3B,KAAK4F,mBAEL5F,KAAK6F,eAER,CAEDD,mBACE,IAAIE,EAAe3B,SAASK,cAAc,kBACtCuB,EAAW5B,SAASK,cAAc,cACtCsB,EAAaE,UAAa,iBAAgBhG,KAAKmF,MAAMhD,gBAAgBiD,EAAAA,eAAqBpF,KAAKmF,MAAMxD,UAAU,aAC/GoE,EAASC,UAAa,YAAWhG,KAAK2B,SAAW,0BAA0ByD,EAAAA,eAAqBpF,KAAK2B,SAAW,GAAG,aAAayD,EAAAA,eAAqBpF,KAAK2B,SAAW,GAAG,aACxK3B,KAAK+E,aAAaC,MAAMC,QAAU,EACnC,CAEDY,gBAEE7F,KAAKkF,UAAUF,MAAMC,QAAU,EAChC,CAEDN,kBACE,MAAMsB,EAAK9B,SAAS+B,cAAc,MAClCD,EAAGE,UAAUC,IAAI,gBACjBpG,KAAKyE,GAAG4B,YAAYJ,GAEpB,IAAIK,EAAOnC,SAAS+B,cAAc,MAClCI,EAAKH,UAAUC,IAAI,QACnB,IAAIG,EAAUpC,SAAS+B,cAAc,OACrCK,EAAQlF,IAAM,+BACdkF,EAAQC,GAAK,WACbF,EAAKD,YAAYE,GAEjB,IAAIE,EAAQtC,SAAS+B,cAAc,MACnCO,EAAMN,UAAUC,IAAI,SACpB,IAAIM,EAAWvC,SAAS+B,cAAc,OACtCQ,EAASrF,IAAM,gCACfqF,EAASF,GAAK,YACdC,EAAMJ,YAAYK,GAElBT,EAAGI,YAAYC,GACfL,EAAGI,YAAYI,EAChB,CAED7B,mBACE,MAAMqB,EAAK9B,SAAS+B,cAAc,MAClCD,EAAGE,UAAUC,IAAI,sBACjBpG,KAAKyE,GAAG4B,YAAYJ,GAEpB,IAAIU,EAAmBxC,SAAS+B,cAAc,MAC9CS,EAAiBR,UAAUC,IAAI,WAC/B,IAAIQ,EAAazC,SAAS+B,cAAc,OACxCU,EAAWvF,IAAM,qCACjBuF,EAAWJ,GAAK,cAChBG,EAAiBN,YAAYO,GAE7B,IAAIC,EAAkB1C,SAAS+B,cAAc,MAC7CW,EAAgBV,UAAUC,IAAI,UAC9B,IAAIU,EAAY3C,SAAS+B,cAAc,OACvCY,EAAUzF,IAAM,qCAChByF,EAAUN,GAAK,aACfK,EAAgBR,YAAYS,GAE5B,IAAIC,EAAmB5C,SAAS+B,cAAc,MAC9Ca,EAAiBZ,UAAUC,IAAI,WAC/B,IAAIY,EAAa7C,SAAS+B,cAAc,OACxCc,EAAW3F,IAAM,oCACjB2F,EAAWR,GAAK,cAChBO,EAAiBV,YAAYW,GAE7B,IAAIC,EAAmB9C,SAAS+B,cAAc,MAC9Ce,EAAiBd,UAAUC,IAAI,WAC/B,IAAIc,EAAa/C,SAAS+B,cAAc,OACxCgB,EAAW7F,IAAM,kCACjB6F,EAAWV,GAAK,cAChBS,EAAiBZ,YAAYa,GAE7BjB,EAAGI,YAAYM,GACfV,EAAGI,YAAYQ,GACfZ,EAAGI,YAAYU,GACfd,EAAGI,YAAYY,EAChB,CAEDhH,KAAKC,GACHA,EAAIiH,UAAU,EAAG,EAjIP,IACA,KAkIVjH,EAAIC,UAAUH,KAAK0E,WAAY,EAAG,GAElC,IAAI,IAAIb,EAAI,EAAGA,EAAI7D,KAAKmF,MAAMtD,aAAa0B,OAAQM,IACjD7D,KAAKmF,MAAMtD,aAAagC,GAAG5D,KAAKC,GAGlC,IAAK,IAAIkH,EAAI,EAAGA,EAAIpH,KAAKmF,MAAMjD,YAAYqB,OAAQ6D,IACjDpH,KAAKmF,MAAMjD,YAAYkF,GAAGnH,KAAKC,GAIjCA,EAAIC,UAAUH,KAAK8E,SAAU,IAAK,EAAG,IAAK,KAC1C5E,EAAImH,UAAY,SAChBnH,EAAIoH,UAAY,GAChBpH,EAAIqH,UAAY,QAChBrH,EAAIsH,KAAO,gBACXtH,EAAIuH,SAAS,QAAS,IAAK,IAC3BvH,EAAIsH,KAAO,gBACXtH,EAAIuH,SAAU,GAAEzH,KAAKmF,MAAMhD,QAAS,IAAK,IAC1C,CAEDsD,cACE,IAAK,IAAI5B,EAAI,EAAGA,EAAI7D,KAAKmF,MAAMtD,aAAa0B,OAAQM,IAClD7D,KAAKmF,MAAMtD,aAAagC,GAAGzD,OAG7B,IAAK,IAAIgH,EAAI,EAAGA,EAAIpH,KAAKmF,MAAMjD,YAAYqB,OAAQ6D,IACjDpH,KAAKmF,MAAMjD,YAAYkF,GAAGhH,MAE7B,CAEDkF,aACWnB,SAASK,cAAc,uBAC7BJ,iBAAiB,QAASpE,KAAKqF,aAEjBlB,SAASK,cAAc,aAC7BJ,iBAAiB,QAASpE,KAAK0H,YAExBvD,SAASK,cAAc,cAC7BJ,iBAAiB,QAASpE,KAAK2H,YAC5C,CAEDtC,YAAYuC,GACV,IAAIC,EAAcD,EAAEE,OACpB,GAA6B,QAAzBD,EAAYE,SAAoB,CAClC,IAAIpE,EAAa,ICpLvB,MACE/D,YAAYuB,GACVnB,KAAKmB,KAAOA,EACC,gBAATA,GACFnB,KAAKgI,MAAQ,UACbhI,KAAKH,IAAM,CAAC,IAAK,MACC,eAATsB,GACTnB,KAAKgI,MAAQ,SACbhI,KAAKH,IAAM,CAAC,IAAK,MACC,gBAATsB,GACTnB,KAAKgI,MAAQ,UACbhI,KAAKH,IAAM,CAAC,IAAK,OAEjBG,KAAKgI,MAAQ,QACbhI,KAAKH,IAAM,CAAC,IAAK,KAEpB,CAEDI,KAAKC,GACHA,EAAIqH,UAAYvH,KAAKgI,MACrB9H,EAAI+H,SAASjI,KAAKH,IAAI,GAAIG,KAAKH,IAAI,GAAI,GAAI,GAC5C,CAEDO,OACEJ,KAAKH,IAAM,CAACG,KAAKH,IAAI,GAAIG,KAAKH,IAAI,GAAK,GACxC,CAED2D,cACE,OAAIxD,KAAKH,IAAI,IAAM,GAKpB,GDmJgCgI,EAAYrB,IACzCxG,KAAKmF,MAAMjD,YAAYkB,KAAKO,GAC5B3D,KAAKmF,MAAMzB,iBAAiBC,EAC7B,CACF,CAED+D,WAAWE,GACL5H,KAAKuC,gBAAgB2F,OACvBlI,KAAKuC,gBAAgB2F,OAAQ,EAC7BlI,KAAKoC,aAAa8F,OAAQ,EAC1BlI,KAAKsC,eAAe4F,OAAQ,IAE5BlI,KAAKuC,gBAAgB2F,OAAQ,EAC7BlI,KAAKoC,aAAa8F,OAAQ,EAC1BlI,KAAKsC,eAAe4F,OAAQ,EAE/B,CAEDP,YAAYC,IACU,IAAhB5H,KAAK6E,aAAoC7C,IAAhBhC,KAAK6E,OAChC7E,KAAK6E,QAAS,EAEd7E,KAAK6E,QAAS,CAEjB,GD/LqB3E,EAAKqE,GACtBgB,OAAL,G","sources":["webpack://nooutsidesnacks/./src/scripts/moving_object.js","webpack://nooutsidesnacks/./src/scripts/food_item.js","webpack://nooutsidesnacks/./src/scripts/level.js","webpack://nooutsidesnacks/./src/index.js","webpack://nooutsidesnacks/./src/scripts/game.js","webpack://nooutsidesnacks/./src/scripts/topping.js"],"sourcesContent":["class MovingObject {\n  constructor(pos, vel, img) {\n    this.pos = pos;\n    this.vel = vel;\n    this.img = img;\n    // this.game = object.game;\n  }\n\n  draw(ctx) {  \n    ctx.drawImage(this.img, this.pos[0], this.pos[1], 75, 75);\n  }\n\n  move() {\n    this.pos = [this.pos[0] + this.vel, this.pos[1]];\n  }\n}\n\nexport default MovingObject","import MovingObject from \"./moving_object\"\n\nconst DIM_X = 800;\nconst DIM_Y = 600;\n\nconst FOODITEMS = { \n  slushee: \"assets/images/cupempty.png\",\n  hotdog: \"assets/images/hotdog.png\",\n  popcorn: \"assets/images/popcornplain.png\",\n  pretzel: \"assets/images/pretzelplain.png\",\n  slusheeCorrect: \"assets/images/cupfilled.png\",\n  hotdogCorrect: \"assets/images/hotdogmustard.png\",\n  popcornCorrect: \"assets/images/popcornbutter.png\",\n  pretzelCorrect: \"assets/images/pretzelsalt.png\", \n  slusheeIncorrect: \"assets/images/cupincorrect.png\",\n  hotdogIncorrect: \"assets/images/hotdogincorrect.png\",\n  popcornIncorrect: \"assets/images/popcornincorrect.png\",\n  pretzelIncorrect: \"assets/images/pretzelincorrect.png\"\n}\n\nclass FoodItem extends MovingObject {\n  constructor(vel, name) {\n    const img = new Image();\n    img.src = FOODITEMS[name];\n    super([0, 450], vel, img);\n    this.name = name;\n    this.topping = null;\n  }\n\n  move() {\n    this.pos = [this.pos[0] + this.vel, this.pos[1]];\n  }\n\n  draw(ctx) {  \n    ctx.drawImage(this.img, this.pos[0], this.pos[1], 75, 75);\n  }\n\n  swapImage(status) {\n    if (status === \"correct\") {\n      // Change to correct img and set this.topping\n      if (this.name === \"slushee\") {\n        this.img.src = \"assets/images/cupfilled.png\";\n      } else if (this.name === \"hotdog\") {\n        this.img.src = \"assets/images/hotdogmustard.png\";\n      } else if (this.name === \"popcorn\") {\n        this.img.src = \"assets/images/popcornbutter.png\";\n      } else {\n        this.img.src = \"assets/images/pretzelsalt.png\";\n      }\n      this.topping = this.name;\n    } else {\n      // Change to incorrect img\n      if (this.name === \"slushee\") {\n        this.img.src = \"assets/images/cupincorrect.png\";\n      } else if (this.name === \"hotdog\") {\n        this.img.src = \"assets/images/hotdogincorrect.png\";\n      } else if (this.name === \"popcorn\") {\n        this.img.src = \"assets/images/popcornincorrect.png\";\n      } else {\n        this.img.src = \"assets/images/pretzelincorrect.png\";\n      }\n      this.topping = \"incorrect\";\n    }\n  }\n\n  static get FOODITEMS() {\n    return FOODITEMS;\n  }\n}\n\nexport default FoodItem","import FoodItem from \"./food_item\";\nimport Topping from \"./topping\";\n\nconst DIM_X = 800;\nconst DIM_Y = 600;\n\nconst LEVELVARIABLES = {\n  1: [1, 2, 2000, 10, 1], \n  2: [2, 20, 2000, 20, 15]\n}\n// For testing: totalFoodItems(pos 1 - prev 15), correctItemsNeeded(pos 4 - prev 10)\n// levelNum, totalFoodItems, intervalDuration, foodItemVel, correctItemsNeeded\n// LEVELVARIABLES[1][3] will get 10\n\nclass Level {\n  constructor(levelNum) {\n    this.levelNum = levelNum;\n    // if(difficulty === 1) {\n    //   this.totalFoodItems = 15;\n    // }\n    this.totalFoodItems = LEVELVARIABLES[this.levelNum][1]; // total food items\n    this.allFoodItems = [];\n    this.numItems = 0;\n    this.intervalId = undefined;\n    this.fillFoodItems();\n    this.allToppings = [];\n    this.score = 0;\n    this.correctSound = new Audio(\"assets/audio/correct.wav\");\n    this.incorrectSound = new Audio(\"assets/audio/incorrect.mp3\");\n    this.backgroundMusic = new Audio(\"assets/audio/ukulele.mp3\");\n    this.backgroundMusic.play();\n  }\n\n  fillFoodItems() {\n    this.intervalId = setInterval(this.createFoodItem.bind(this), LEVELVARIABLES[this.levelNum][2]);  // intervalDuration\n  }\n\n  createFoodItem() {\n    let keys = Object.keys(FoodItem.FOODITEMS);\n    let randPos = Math.floor(Math.random() * 4);\n    let colorValue = keys[randPos];\n    let newFoodItem = new FoodItem(LEVELVARIABLES[this.levelNum][3], colorValue); //velocity \n    this.allFoodItems.push(newFoodItem);\n    this.numItems += 1;\n    if (this.numItems === this.totalFoodItems) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  checkToppingBounds() {\n    if (this.allToppings.length > 0 && this.allToppings[0].outOfBounds()) {\n      this.allToppings = this.allToppings.slice(1);\n    }\n  }\n\n  getBelowFoodItem(newTopping) {\n    // Checks if there are any food items with an x-pos within the range of the clicked topping \n    // Returns the food item\n    let belowFoodItem = null;\n    for (let i = 0; i < this.allFoodItems.length; i++) {\n      let foodItem = this.allFoodItems[i];\n      if (foodItem.pos[0] >= (newTopping.pos[0] - 125) && foodItem.pos[0] <= (newTopping.pos[0] - 10)) {\n        belowFoodItem = foodItem;\n        console.log(foodItem);\n        console.log(newTopping);\n      }\n    }\n    if (belowFoodItem != null && belowFoodItem.topping === null) {\n      this.addTopping(belowFoodItem, newTopping);\n    }\n    return belowFoodItem;\n  }\n\n  addTopping(belowFoodItem, newTopping) {\n    // Already checked that fooditem's topping is null\n    // Check if match is correct\n    // If dispenser matches food item, update fooditem.topping, change image to correct, add to the score\n    // If does not match, update fooditem.topping to incorrect, change image to incorrect \n    if (this.checkCorrectMatch(belowFoodItem, newTopping) === true) {\n      belowFoodItem.swapImage(\"correct\");\n      this.correctSound.play();\n      this.score += 1;\n    } else {\n      belowFoodItem.swapImage(\"incorrect\");\n      this.incorrectSound.play();\n    }\n  }\n\n  checkCorrectMatch(belowFoodItem, newTopping) {\n    if ((belowFoodItem.name === \"hotdog\" && newTopping.name === \"hotdog-img\") || (belowFoodItem.name === \"popcorn\" && newTopping.name === \"popcorn-img\") || (belowFoodItem.name === \"slushee\" && newTopping.name === \"slushee-img\") || (belowFoodItem.name === \"pretzel\" && newTopping.name === \"pretzel-img\")) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static get LEVELVARIABLES() {\n    return LEVELVARIABLES;\n  }\n}\n\nexport default Level","import FoodItem from './scripts/food_item';\nimport Game from './scripts/game'\nimport MovingObject from './scripts/moving_object'\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"game-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const startButton = document.getElementById(\"start-button\");\n  const titleScreen = document.querySelector(\".title-screen\");\n  const canvasDiv = document.querySelector(\".canvas-div\");\n  const gameCanvas = document.getElementById(\"game-canvas\");\n\n  const game = new Game(ctx, canvasDiv);\n  game.start();\n\n  // startButton.addEventListener(\"click\", function(){\n  //   titleScreen.style.display = \"none\";\n  //   canvasDiv.style.display = \"block\";\n  //   gameCanvas.style.display = \"block\";\n\n  //   const game = new Game(ctx, canvasDiv);\n  //   game.start();\n  // })\n})","import FoodItem from \"./food_item\";\nimport Topping from \"./topping\";\nimport Level from \"./level\";\n\nconst DIM_X = 800;\nconst DIM_Y = 600;\n\nclass Game {\n  constructor(ctx, el){\n    this.ctx = ctx;\n    this.el = el; \n    this.background = new Image();\n    this.background.src = \"assets/images/concessions4.png\";\n    this.createMutePause();\n    this.createDispensers();\n    this.paused = false;\n    this.scoreImg = new Image();\n    this.scoreImg.src = \"assets/images/starscore.png\";\n    this.levelsScreen = document.querySelector(\".levels-screen\");\n    this.levelsScreen.style.display = \"none\";\n    this.endScreen = document.querySelector(\".end-screen\");\n    this.endScreen.style.display = \"none\";\n    this.levelNum = 1;\n    this.level = new Level(this.levelNum); // ADD HERE\n    this.handleClick = this.handleClick.bind(this);\n    this.bindEvents();\n  }\n\n  start() {\n    this.step();\n  }\n\n  step() {\n    setInterval(this.draw.bind(this, this.ctx), 100);\n    setInterval(this.moveObjects.bind(this), 100);\n    setInterval(this.level.checkToppingBounds.bind(this.level), 100);\n    setInterval(this.isOver.bind(this), 100);\n  }\n\n  isOver() {\n    // if allFoodItems.length === totalFoodItems and the last foodItem's x pos is greater than DIM X\n    if (this.level.allFoodItems.length === Level.LEVELVARIABLES[this.level.levelNum][1] && this.level.allFoodItems[this.level.allFoodItems.length - 1].pos[0] >= DIM_X) {\n      this.levelResult();\n    }\n  }\n\n  levelResult() {\n    // If win, show levels screen\n    // If lose, show end screen\n    // If score is greater/equal to correctItemsNeeded\n    if (this.level.score >= Level.LEVELVARIABLES[this.level.levelNum][4]) {\n      this.showLevelsScreen();\n    } else {\n      this.showEndScreen();\n    }\n  }\n\n  showLevelsScreen() {\n    let levelSummary = document.querySelector(\".level-summary\");\n    let levelReq = document.querySelector(\".level-req\");\n    levelSummary.innerHTML = `You fulfilled ${this.level.score} out of ${Level.LEVELVARIABLES[this.level.levelNum][1]} orders!`;\n    levelReq.innerHTML = `In Level ${this.levelNum + 1}, you need to fulfill ${Level.LEVELVARIABLES[this.levelNum + 1][4]} out of ${Level.LEVELVARIABLES[this.levelNum + 1][1]} orders.`;\n    this.levelsScreen.style.display = \"\";\n  }\n\n  showEndScreen() {\n    // Code to customize text inside end screen\n    this.endScreen.style.display = \"\";\n  }\n\n  createMutePause() {\n    const ul = document.createElement(\"ul\");\n    ul.classList.add(\"game-buttons\");\n    this.el.appendChild(ul);\n\n    let mute = document.createElement(\"li\");\n    mute.classList.add(\"mute\");\n    let imgMute = document.createElement(\"img\");\n    imgMute.src = \"assets/images/buttonmute.png\";\n    imgMute.id = \"mute-img\";\n    mute.appendChild(imgMute);\n\n    let pause = document.createElement(\"li\");\n    pause.classList.add(\"pause\");\n    let imgPause = document.createElement(\"img\");\n    imgPause.src = \"assets/images/buttonpause.png\";\n    imgPause.id = \"pause-img\";\n    pause.appendChild(imgPause);\n\n    ul.appendChild(mute);\n    ul.appendChild(pause);\n  }\n\n  createDispensers() {\n    const ul = document.createElement(\"ul\");\n    ul.classList.add(\"dispenser-machines\");\n    this.el.appendChild(ul);\n\n    let dispenserSlushee = document.createElement(\"li\");\n    dispenserSlushee.classList.add(\"slushee\");\n    let imgSlushee = document.createElement(\"img\");\n    imgSlushee.src = \"assets/images/dispenserslushee.png\";\n    imgSlushee.id = \"slushee-img\";\n    dispenserSlushee.appendChild(imgSlushee);\n\n    let dispenserHotdog = document.createElement(\"li\");\n    dispenserHotdog.classList.add(\"hotdog\");\n    let imgHotdog = document.createElement(\"img\");\n    imgHotdog.src = \"assets/images/dispensermustard.png\";\n    imgHotdog.id = \"hotdog-img\";\n    dispenserHotdog.appendChild(imgHotdog);\n\n    let dispenserPopcorn = document.createElement(\"li\");\n    dispenserPopcorn.classList.add(\"popcorn\");\n    let imgPopcorn = document.createElement(\"img\");\n    imgPopcorn.src = \"assets/images/dispenserbutter.png\";\n    imgPopcorn.id = \"popcorn-img\";\n    dispenserPopcorn.appendChild(imgPopcorn);\n\n    let dispenserPretzel = document.createElement(\"li\");\n    dispenserPretzel.classList.add(\"pretzel\");\n    let imgPretzel = document.createElement(\"img\");\n    imgPretzel.src = \"assets/images/dispensersalt.png\";\n    imgPretzel.id = \"pretzel-img\";\n    dispenserPretzel.appendChild(imgPretzel);\n\n    ul.appendChild(dispenserSlushee);\n    ul.appendChild(dispenserHotdog);\n    ul.appendChild(dispenserPopcorn);\n    ul.appendChild(dispenserPretzel);\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, DIM_X, DIM_Y);\n    // draw background\n    ctx.drawImage(this.background, 0, 0);\n    // draw food items\n    for(let i = 0; i < this.level.allFoodItems.length; i++) {\n      this.level.allFoodItems[i].draw(ctx);\n    }\n    // draw toppings being dispensed \n    for (let j = 0; j < this.level.allToppings.length; j++) {\n      this.level.allToppings[j].draw(ctx);\n    }\n\n    // draw score\n    ctx.drawImage(this.scoreImg, 560, 0, 175, 175);\n    ctx.textAlign = \"center\";\n    ctx.lineWidth = 0.5;\n    ctx.fillStyle = \"black\";\n    ctx.font = \"15px Alkalami\";\n    ctx.fillText(\"Score\", 646, 80);\n    ctx.font = \"30px Alkalami\";\n    ctx.fillText(`${this.level.score}`, 647, 110);\n  }\n\n  moveObjects() {\n    for (let i = 0; i < this.level.allFoodItems.length; i++) {\n      this.level.allFoodItems[i].move();\n    }\n\n    for (let j = 0; j < this.level.allToppings.length; j++) {\n      this.level.allToppings[j].move();\n    }\n  }\n\n  bindEvents() {\n    let ul = document.querySelector(\".dispenser-machines\")\n    ul.addEventListener(\"click\", this.handleClick);\n\n    let muteButton = document.querySelector(\"#mute-img\");\n    muteButton.addEventListener(\"click\", this.handleMute);\n\n    let pauseButton = document.querySelector(\"#pause-img\");\n    pauseButton.addEventListener(\"click\", this.togglePause);\n  }\n\n  handleClick(e) {\n    let selectedImg = e.target;\n    if (selectedImg.nodeName === \"IMG\") {\n      let newTopping = new Topping(selectedImg.id);\n      this.level.allToppings.push(newTopping);\n      this.level.getBelowFoodItem(newTopping);\n    }\n  }\n\n  handleMute(e) {\n    if (this.backgroundMusic.muted) {\n      this.backgroundMusic.muted = false;\n      this.correctSound.muted = false;\n      this.incorrectSound.muted = false;\n    } else {\n      this.backgroundMusic.muted = true;\n      this.correctSound.muted = true;\n      this.incorrectSound.muted = true;\n    }\n  }\n\n  togglePause(e) {\n    if (this.paused === false || this.paused === undefined) {\n      this.paused = true;\n    } else {\n      this.paused = false;\n    }\n  }\n}\n\nexport default Game","class Topping {\n  constructor(name) {\n    this.name = name;\n    if (name === \"slushee-img\") {\n      this.color = \"#FE2F92\";\n      this.pos = [143, 350];\n    } else if (name === \"hotdog-img\") {\n      this.color = \"yellow\";\n      this.pos = [308, 350];\n    } else if (name === \"popcorn-img\") {\n      this.color = \"#F6B977\";\n      this.pos = [474, 350];\n    } else {  // salt\n      this.color = \"white\";\n      this.pos = [639, 350];\n    }\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.pos[0], this.pos[1], 15, 40);\n  }\n\n  move() {\n    this.pos = [this.pos[0], this.pos[1] + 20];\n  }\n\n  outOfBounds() {\n    if (this.pos[1] >= 475) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nexport default Topping"],"names":["constructor","pos","vel","img","this","draw","ctx","drawImage","move","FOODITEMS","slushee","hotdog","popcorn","pretzel","slusheeCorrect","hotdogCorrect","popcornCorrect","pretzelCorrect","slusheeIncorrect","hotdogIncorrect","popcornIncorrect","pretzelIncorrect","MovingObject","name","Image","src","super","topping","swapImage","status","LEVELVARIABLES","levelNum","totalFoodItems","allFoodItems","numItems","intervalId","undefined","fillFoodItems","allToppings","score","correctSound","Audio","incorrectSound","backgroundMusic","play","setInterval","createFoodItem","bind","colorValue","Object","keys","FoodItem","Math","floor","random","newFoodItem","push","clearInterval","checkToppingBounds","length","outOfBounds","slice","getBelowFoodItem","newTopping","belowFoodItem","i","foodItem","console","log","addTopping","checkCorrectMatch","document","addEventListener","getElementById","getContext","canvasDiv","querySelector","el","background","createMutePause","createDispensers","paused","scoreImg","levelsScreen","style","display","endScreen","level","Level","handleClick","bindEvents","start","step","moveObjects","isOver","levelResult","showLevelsScreen","showEndScreen","levelSummary","levelReq","innerHTML","ul","createElement","classList","add","appendChild","mute","imgMute","id","pause","imgPause","dispenserSlushee","imgSlushee","dispenserHotdog","imgHotdog","dispenserPopcorn","imgPopcorn","dispenserPretzel","imgPretzel","clearRect","j","textAlign","lineWidth","fillStyle","font","fillText","handleMute","togglePause","e","selectedImg","target","nodeName","color","fillRect","muted"],"sourceRoot":""}